########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###

com.ibm.uk.hursley.perfharness.mqjava.HTTPProvider.desc =\
Provides access to communicate with an HTTP server.

ms.dflt = 0
ms.desc = Time (millis) that client sleeps after sends/receives a msg.
ms.type = java.lang.Integer

jh.dflt = localhost
jh.desc = Hostname of server to connect to.
jh.type = java.lang.String

jp.dflt = 7080
jp.desc = HTTP Listener Port to connect to.
jp.type = java.lang.Integer

to.dflt = 10000
to.desc = Timeout (millis) on receiving an HTTP response back from server
to.type = java.lang.Integer

ri.dflt = 500
ri.desc = Response interval (millis) for checking for asynchronous shutdown request signals
ri.type = java.lang.Integer

mf.dflt =
mf.desc = External file to use as message contents.
mf.type = java.lang.String

ur.dflt = "/"
ur.desc = URL of servlet to send data to
ur.type = java.lang.String

cs.dflt = false
cs.desc = Close socket after each message. Set to use a new HTTP connection\n\
for each request.
cs.type = java.lang.Boolean

wo.dflt = 0
wo.desc = Number of messages sent before a reponse message is written to a file
wo.type = java.lang.Integer
wo.xtra = If this value is >0 then each client thread will write a response\n\
message to a file in the current dir called threadname.reponsemsg

sl.dflt = 0
sl.desc = Time (millis) that client sleeps after sends/receives a msg.
sl.type = java.lang.Integer

sa.dflt = 
sa.desc = Specify a SOAPAction: Tag in the header.The value is the value \n\
of the SOAPAction field.
sa.type = java.lang.String

hc.dflt = text/xml
hc.desc = Specify a value of the content type header
hc.type = java.lang.String

he.dflt = 
he.desc = Specify the name of a file to pull in extra HTTP headers from
he.type = java.lang.String

nm.dflt = 0
nm.desc = Number of messages to send for each thread
nm.type = java.lang.Integer
nm.xtra = If this value is >0 then each client thread will send this number of msgs\n\

rb.dflt = 10000
rb.desc = Size of the receive buffer in bytes in which the HTTP Reply message is read. This MUST be big enough for the reply message.
rb.type = java.lang.Integer

mc.dflt = 0
mc.desc = Number of HTTP requests to send before renewing an HTTP persistent connection. 
mc.type = java.lang.Integer
mc.xtra = If this value is 0 then the HTTP connection is never closed

dn.dflt = 0
dn.desc = Multi-port numeric range.
dn.type = java.lang.Integer
dn.xtra = This is the number of ports to scale. If the port is defined as 7800 and -dn 4 is specified then threads 1 to 5 will connect to 7800, 7801, 7802 and 7803. If there are more threads than the port range then the port range will wrap.

cr.dflt = 0
cr.desc = Connection reset.
cr.type = java.lang.Integer
cr.xtra = In the event of an Exception being thrown for a thread writing or reading data, this parameter will allow the connection to be reset up to the specified number of times.

px.dflt = false
px.desc = Send absoluteURI in HTTP header request URI, required when requests sent to a proxy.
px.type = java.lang.Boolean

se.dflt = false
se.desc = Use SSL
se.type = java.lang.Boolean

pa.dflt = 0
pa.desc = Pattern for sending multiple different messages: 0=cycle (default), 1=prime, 2=thread
pa.type = java.lang.Integer
pa.xtra = See also: -mf, -rb, and Task 27490 in the EnterpriseConnectivity RTC

ea.dflt = false
ea.desc = Allow errors
ea.type = java.lang.Boolean

el.dflt = 0
el.desc = Number of errors permitted per client thread
el.type = java.lang.Integer

es.dflt = 1000
es.desc = Period to sleep for between connection retries when errors allowed (ms)
es.type = java.lang.Integer



au.dflt =
au.desc = Specify username and password for HTTP basic auth in the form <username>:<password> 
au.type = java.lang.String

ws.dflt = 0
ws.desc = Write last response message to the screen on shutdown
ws.type = java.lang.Integer
ws.xtra = If this value is >0 then each client thread will write the last response message received to the screen on shutdown.

ot.dflt = POST
ot.desc = HTTP1.1 operation type: POST | GET
ot.type = java.lang.String
