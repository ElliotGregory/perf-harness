########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###

com.ibm.uk.hursley.perfharness.tcpip.TCPIPProvider.desc =\
Provides access to communicate with a TCP or HTTP server.

ms.dflt = 0
ms.desc = Time (millis) that client sleeps after sends/receives a msg.
ms.type = java.lang.Integer

jh.dflt = localhost
jh.desc = Hostname of server to connect to.
jh.type = java.lang.String

jp.dflt = 7080
jp.desc = HTTP Listener Port to connect to.
jp.type = java.lang.Integer

to.dflt = 10000
to.desc = Timeout (millis) on receiving a TCP response back from server
to.type = java.lang.Integer

ri.dflt = 500
ri.desc = Response interval (millis) for checking for asynchronous shutdown request signals
ri.type = java.lang.Integer

mf.dflt =
mf.desc = External file to use as message contents (a comma-separated list can\n\
be used in conjuction with -pa)
mf.type = java.lang.String

ur.dflt = "/"
ur.desc = URL of servlet to send data to
ur.type = java.lang.String

cs.dflt = false
cs.desc = Close socket after each message. Set to use a new HTTP connection\n\
for each request.
cs.type = java.lang.Boolean

wo.dflt = 0
wo.desc = Number of messages sent before a reponse message is written to a file
wo.type = java.lang.Integer
wo.xtra = If this value is >0 then each client thread will write a response\n\
message to a file in the current dir called threadname.reponsemsg

sl.dflt = 0
sl.desc = Time (millis) that client sleeps after sends/receives a msg.
sl.type = java.lang.Integer

sa.dflt = no SOAPAction Header
sa.desc = Specify a SOAPAction: Tag in the header.The value is the value\n\
of the SOAPAction field.
sa.type = java.lang.String

hc.dflt = text/xml
hc.desc = Specify a value of the content type header
hc.type = java.lang.String

nm.dflt = 0
nm.desc = Number of messages to send for each thread
nm.type = java.lang.Integer
nm.xtra = If this value is >0 then each client thread will send this number of msgs\n\

rb.dflt = 10000
rb.desc = Size of the receive buffer in bytes in which the TCP or HTTP reply message is\n\
read. For HTTP, this must be an integer large enough to hold the largest of the responses;\n\
for TCP, this must be an exact specification of the response sizes. In the latter case, a\n\
comma-separated list may be used in conjuction with -pa, specifying the expected response\n\
length for each request message defined using -mf (obviously, if there is only one request\n\
message, an integer will suffice here). Missing elements are substituted with the default.
rb.type = java.lang.String

mc.dflt = 0
mc.desc = Number of TCP messages to send before renewing a TCP persistent connection.
mc.type = java.lang.Integer
mc.xtra = If this value is 0 then the TCP connection is never closed

dn.dflt = 0
dn.desc = Multi-port numeric range.
dn.type = java.lang.Integer
dn.xtra = This is the number of ports to scale. If the port is defined as 7800 and -dn 4 is\n\
specified then threads 1 to 5 will connect to 7800, 7801, 7802 and 7803. If there are more\n\
threads than the port range then the port range will wrap.

hl.dflt = false
hl.desc = Specifies that an HL7 message is being sent. Prepends the message with 0x0B and\n\
appends 0x1C 0x0D
hl.type = java.lang.Boolean

se.dflt = false
se.desc = Use SSL
se.type = java.lang.Boolean

pa.dflt = 0
pa.desc = Pattern for sending multiple different messages: 0=cycle (default), 1=prime, 2=thread
pa.type = java.lang.Integer
pa.xtra = See also: -mf, -rb, and Task 27490 in the EnterpriseConnectivity RTC
