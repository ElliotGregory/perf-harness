########################################################## {COPYRIGHT-TOP} ###
# Copyright 2016 IBM Corporation
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the MIT License
# which accompanies this distribution, and is available at
# http://opensource.org/licenses/MIT
########################################################## {COPYRIGHT-END} ###

com.ibm.uk.hursley.perfharness.mqjava.MQProvider.desc =\
Provides access to WebSphere MQ classes for Java

jt.dflt = mqc
jt.desc = WMQ transport (mqb, mqbf, mqc).
jt.type = java.lang.String
jt.xtra = "mqb" is local-bindings connections, "mqbf" is local fastpath connections,\n\
"mqc" is TCP/IP connections.

jh.dflt = localhost
jh.desc = Host to connect to.
jh.type = java.lang.String

jp.dflt = 1414
jp.desc = Port to connect to.
jp.type = java.lang.Integer

jc.dflt = SYSTEM.DEF.SVRCONN
jc.desc = WMQ Channel to connect to.
jc.type = java.lang.String

jb.dflt = QM
jb.desc = WMQ queue manager to connect to.
jb.type = java.lang.String

jl.dflt = 
jl.desc = SSLCipherSuite name
jl.type = java.lang.String
jl.xtra = This controls the SSL encryption methodology.  RTFM or developerWorks for details.

to.dflt = 5
to.desc = Polling timeout on receiving messages (0 means forever).
to.type = java.lang.Double
to.xtra = Threads will not stop if this timeout occurs, it simply the polling interval.\n\
Note that when using a value of 0, the tool probably won't exit cleanly.
to.hide = true

tx.dflt = false
tx.desc = Transactionality.
tx.type = java.lang.Boolean

ms.dflt = 1000
ms.desc = Message size in bytes.
ms.type = java.lang.Integer

mf.dflt =
mf.desc = External file to use as message contents.
mf.type = java.lang.String

pp.dflt = false
pp.desc = Use persistent messages.
pp.type = java.lang.Boolean

rf.dflt = 0
rf.desc = Use RFH Header from msg file, as produced by RFHUtil. 
rf.type = java.lang.Integer
rf.xtra = "rf" value of 1 means read as RFH1 header (MQC.MQFMT_RF_HEADER_1), \n\
Value of 2 means RFH2 header (MQC.MQFMT_RF_HEADER_2).

co.dflt = false
co.desc = Use correlation-id on requests.
co.type = java.lang.Boolean
co.xtra = This will use the correlation-id per message model (unlike the JMS classes in this tool).

mq.dflt = MQSTR
mq.desc = MQ message format. This value is set on the MQ Message in the MQMessage.format field.
mq.type = java.lang.String
mq.xtra = The value set should be the actual string that is the constant in the MQC.MQFMT* class, \n\ For example to specify MQC.MQFMT_TRIGGER then set -mq MQTRIG  

mc.dflt = 1208
mc.desc = MQ Message Character Set.  This value is set on the MQ Message in the MQMessage.characterSet field.
mc.type = java.lang.Integer

me.dflt = 546
me.desc = MQ Message Encoding.  This value is set on the MQ Message in the MQMessage.encodingfield field.
me.type = java.lang.Integer

bf.dflt = false
bf.desc = Force MQOO_BIND_NOT_FIXED for clusters.
bf.type = java.lang.Boolean
bf.xtra = This is normally done by changing the queue definition to DEFBIND(NOTFIXED).
bf.hide = true
bf.long = bindNotFixed

ir.dflt = 1
ir.desc = input to out put ratio, default =1  e.g. 3 means send 3 then get 1.
ir.type = java.lang.Integer

or.dflt = 1
or.desc = output to input ratio, default =1  e.g. 3 means put 1 then get 3 msgs, can used for pubsub fan out.
or.type = java.lang.Integer

cv.dflt = 
cv.desc = Correlation ID value.
cv.type = java.lang.String

ws.dflt = 0
ws.desc = Write last response message to the screen on shutdown
ws.type = java.lang.Integer
ws.xtra = If this value is >0 then each client thread will write the last response message received to the screen on shutdown.

mi.dflt = false
mi.desc = Use msg-id on requests.
mi.type = java.lang.Boolean
mi.xtra = This will use the msg-id received by the put() on the get() on a per thread basis.
